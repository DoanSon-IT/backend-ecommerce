package com.sondv.phone.service;

import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.Map;

@Component
@RequiredArgsConstructor
public class OpenAiClient {

    @Value("${GROQ_API_KEY}")
    private String groqApiKey;

    @Value("${GROQ_API_KEY}")
    private String groqApiUrl;

    private final RestTemplate restTemplate = new RestTemplate();

    public String ask(String prompt) {
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        headers.setBearerAuth(groqApiKey); // ‚úÖ G·∫Øn Groq API key

        Map<String, Object> requestBody = Map.of(
                "entity", "llama3-70b-8192",
                "messages", List.of(
                        Map.of("role", "system", "content",
                                "B·∫°n l√† m·ªôt tr·ª£ l√Ω t∆∞ v·∫•n b√°n ƒëi·ªán tho·∫°i th√¥ng minh. Tr·∫£ l·ªùi th√¢n thi·ªán, d·ªÖ hi·ªÉu, ng·∫Øn g·ªçn. C√≥ th·ªÉ d√πng emoji n·∫øu c·∫ßn."),
                        Map.of("role", "user", "content", prompt)
                ),
                "max_tokens", 200,
                "temperature", 0.8
        );

        HttpEntity<Map<String, Object>> request = new HttpEntity<>(requestBody, headers);

        try {
            ResponseEntity<Map> response = restTemplate.postForEntity(groqApiUrl, request, Map.class);
            Map body = response.getBody();

            if (body == null || body.get("choices") == null) {
                System.err.println("‚ö†Ô∏è Groq tr·∫£ v·ªÅ sai format: " + response);
                return fallbackAnswer(prompt);
            }

            List<Map> choices = (List<Map>) body.get("choices");
            Map message = (Map) choices.get(0).get("message");
            return message.get("content").toString().trim();

        } catch (Exception e) {
            System.err.println("‚ùå L·ªói khi g·ªçi Groq: " + e.getMessage());
            return fallbackAnswer(prompt);
        }
    }

    private String fallbackAnswer(String prompt) {
        return "Hi·ªán t·∫°i tr·ª£ l√Ω ƒëang qu√° t·∫£i. Anh/ch·ªã vui l√≤ng th·ª≠ l·∫°i sau ·∫° üôè";
    }
}
